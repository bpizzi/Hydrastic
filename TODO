List of stuff being/already implemented.

Roadmap
=======

v0.1: Multilevel taxonomy, basic content generation, parsing content threw processors.
v0.2: Logging
v0.3: Theme management, helpers
v0.4: Assets, Images
v0.5: Widgets
v0.6: Aside generation (sitemaps, rss...)
v0.7: Publish task + misc tasks
v0.8: Comments
v0.9: Metadata parser
v1.0: Online Editing

Functional
===========
  
  [DONE] Taxonomy
     [DONE] Unlimited levels
     [DONE] Generation of directories
     [DONE] Generation of each post in their right folders regarding their metadata
     [DONE] Fully unit tested

  [DONE] Content parsing 
  	 [DONE] Textile
  	 [DONE] Markdown
  	 [DONE] MarkdownExtra  
  	 [DONE] ReStructuredText 
  	 [DONE] Texy! (need iconv.so enabled in php.ini)
  	 Code 

   Helpers 
     Link
     Menu
     Asset
     Breadcrumbs

   Widgets 
     taxonomye
     links,
     facebook,
     twitter,

   RSS feeds

   Multilingual

   Google
     Sitemap Generation
     Google Analytics 
     Google Webmaster Toolkit
     robot.txt

   Migration script 
     WordPress
     Drupal
     Joomla

   Tasks
     Generating a temporary index.html "Website is being updated" for live updates
     Publishing task (ftp/ssh/rsync/etc)
     INIT should put a default index.html at the root "You should setup your webserver to point to www/ instead"

   Assets management: list of files to include (css/js) and post-processors (compass, js-min, etc)

   Image management: processor+rules to apply to images (min, compress, etc)

   Comments handling : Facebook comments / disq.us / Comments.php (comments.js frontside)
   
   Template engine for theme management 
     [DONE] Twig + default set of template files
     Liquid
     Smarty
     Standard 404/50x page

   Theme 
     Theme should provide a set of helpers to include asset in content
     Taxon should declare a special template
     Post should inherit template from is parent template if not specified in its metadatas
     Theme should only place assets in www/ if they are called somewhere in html files
     

   Online live editing password protected interface (yet to be decided...)
   


Internal 
========

    [BEING DONE] Unit tests
 
    Use Seldaek/monolog to log objects behavior (rather than useless //echo)

    Integrated webserver for live-viewing

    Metadata parser: let the user know when he's not using an official metadata


Doc
===

    [BEING DONE] Writing the website www.hydrastic.com
    
    Howto run on linux/mac/windows

    Typical create/write/publish loop
